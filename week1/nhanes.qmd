---
title: "NHANES Challenge"
format: html
editor: visual
---

### Load Libraries

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(car)
library(tidyverse)
library(haven)
library(here)
library(ggplot2)
library(janitor)
library(skimr)
```

### Read-in Datasets for this Analysis:

-   DR1TOT_J.xpt as 'diet_behavior'
-   2017-2018_Hg-Blood.XPT as 'blood_hg'
-   2017-2018_Hg-Urine.XPT as 'urine_hg'
-   2017-2018_Diabetes.XPT as 'diabetes'

```{r}
diet_behavior <- read_xpt(here("data/nhanes_data/DR1TOT_J.XPT"))
blood_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Blood.XPT"))
urine_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Urine.XPT"))
diabetes <- read_xpt(here("data/nhanes_data/2017-2018_Diabetes.XPT"))
demographics <- read_xpt(here("data/nhanes_data/2017-2018_Demographics.XPT"))
```

### Subset Read-in Datasets

Subset 'diet_behavior' as 'diet'

```{r}
diet <- select(diet_behavior, SEQN, DRD360, DRD370B, DRD370BQ, DRD370Q, DRD370QQ)
```

Subset 'diabetes' as 'tiid'

```{r}
tiid <- select(diabetes, SEQN, DIQ010)
```

Subset 'blood_hg' as 'bhg'

```{r}
bhg <- select(blood_hg, SEQN, LBXIHG, LBDIHGSI, LBXBGE, LBXBGM)
```

Subset "urine_hg' as 'uhg'

```{r}
uhg <- select(urine_hg, SEQN, URXUHG)
```

### Merge Subsets Into A Working Dataframe as 'df'

```{r}
df <- list(diet, tiid, bhg, uhg)

df <- df %>% reduce(full_join, by = 'SEQN')
```

1.  Filter Dataframe df for the following:

```{r}
# Assuming your dataframe is named `nhanes_data`
df <- df %>%
  # Filter out rows where DIQ010 or DRD360 are NA
  filter(!is.na(DIQ010), !is.na(DRD370B)) %>%
  # Keep only rows where DIQ010 and DRD360 are 1 or 2
  filter(DIQ010 %in% c(1, 2), DRD370B %in% c(1, 2)) %>%
  # Recode 1 to "Yes" and 2 to "No" for DIQ010 and DRD360
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes"),
    DRD370B = ifelse(DRD370B == 1, "Consumes Ahi", "No Ahi")
  )
  
```

2.  Do some exploratory data analysis

    ```{r}
    skim(df)
    ```

    ```{r}
    ggplot(data = df, aes(x = DIQ010, fill = DRD370B)) +
      geom_bar()
    ```

3.  Determine the prior probability that someone has diabetes (DIQ010)

    -   P(B)

```{r}
df %>% 
  tabyl(DIQ010) %>% 
  adorn_totals("row")
```

```{r}
prior_prob_diabetes <- 0.1287
```

2.  Determine the prior probability that someone eats tuna (DRD370B)
    -   P(A)

```{r}
df %>% 
  tabyl(DRD370B) %>% 
  adorn_totals("row")
```

```{r}
prior_prob_tuna <- 0.3609
```

2.  Determine the likelihood of eating tuna and having diabetes
    -   L(B\|A) = P(A\|B)

```{r}
df %>% 
  tabyl(DRD370B, DIQ010) %>% 
  adorn_percentages("col") 
```

```{r}
likelihood_tuna_diabetes <- 0.3584
```

2.  Determine posterior probability via bayes theorem
    -   P(B\|A)
    -   P(B\|A) = P(B)LP(B/A) / P(A)

```{r}
(prior_prob_diabetes*likelihood_tuna_diabetes) / prior_prob_tuna
```

This means that both are independent variables, given that there's not much different between P(B\|A) and P(A).

2.  What other questions can we ask of this data?
    1.  prob of diabetes for ethnicity, age

```{r}
demo_df <- select(demographics, SEQN, RIAGENDR, DMDHHSZA, DMDHHSZB, DMDHHSZE, DMDHRGND, INDFMPIR)
demo_df <- list(demo_df, tiid)
demo_df <- demo_df %>% reduce(full_join, by = 'SEQN')

```

```{r}
skim(demo_df)
```

```{r}
demo_df <- demo_df %>%
  filter(!is.na(DIQ010), !is.na(RIAGENDR)) %>%
  filter(DIQ010 %in% c(1, 2), RIAGENDR %in% c(1, 2)) %>%
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes"),
    RIAGENDR = ifelse(RIAGENDR == 1, "Male", "Female")
  )
```

```{r}
ggplot(data = demo_df, aes(x = DIQ010, fill = RIAGENDR)) +
  geom_bar()
```

```{r}
demo_df %>% 
  tabyl(RIAGENDR) %>% 
  adorn_totals("row")
```

```{r}
prior_prob_male <- 0.4912
```

```{r}
demo_df %>% 
  tabyl(DIQ010, RIAGENDR) %>% 
  adorn_percentages("col") 
```

```{r}
likelihood_diabetes_male <- 0.113
```

```{r}
(prior_prob_diabetes * likelihood_diabetes_male) / prior_prob_male
```

## Diabetes and Age

```{r}
demographics <- demographics %>% 
  select(SEQN, RIDRETH1, RIAGENDR, RIDAGEYR)
```

```{r}
nhanes_data <- left_join(df, demographics, by = "SEQN")
```

```{r}
nhanes_data <- nhanes_data %>% 
  mutate(age_bracket = ifelse(RIDAGEYR > 40, "old", "young"))
```

### Bayes Theorem - Diabetes and Age

```{r}
print(prior_prob_diabetes) #P(B)
```

P(A)

```{r}
nhanes_data %>% 
  tabyl(age_bracket) %>% 
  adorn_totals("row")
```

```{r}
prior_prob_old <- 0.534
```

L(B\|A) = P(A\|B)

```{r}
nhanes_data %>% 
  tabyl(age_bracket, DIQ010) %>% 
  adorn_percentages("col")
```

```{r}
likelihood_age_diabetes <- 0.955
```

P(B\|A)

-   P(B\|A) = P(B)LP(B/A) / P(A)

```{r}
(prior_prob_diabetes*likelihood_age_diabetes) / prior_prob_old
```

Getting P(B\|A) w/the function

```{r}
nhanes_data %>% 
   tabyl(DIQ010, age_bracket) %>% 
   adorn_percentages("col")
```
