---
title: "Lecture Bayes Factor"
format: html
editor: visual
---

### Libraries

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(bayesrules)
library(BayesFactor)
library(haven)
library(here)
library(Hmisc)
library(palmerpenguins)
options(scipen = 99)
```

### Overview

Today, we are exploring **Bayes Factors**—a statistical tool that evaluates evidence for differences between two categorical groups. Unlike frequentist p-values, **Bayes Factors (BF)** quantify how much more likely the observed data are under one hypothesis versus another. Specifically, it tells us whether we should favor the **null hypothesis (no difference)** or the **alternative hypothesis (there is a difference)**.

### Bikes Data

```{r}
data(bikes)
```

How can we compare the number of rides between weekend days and non-weekend days?

-   Find the mean number of rides for weekend days and non-weekend days

```{r}
bikes %>% 
  group_by(weekend) %>% 
  summarise(mean_rides = mean(rides))
```

-   Make a boxplot of number of rides showing the difference between weekend days and non-weekend days

```{r}
ggplot(data = bikes, aes(x = weekend, y = rides, fill = weekend)) +
  geom_boxplot() +
  geom_jitter()
```

-   Make a density plot of number of rides showing the difference between weekend days and non-weekend days

```{r}
ggplot(data = bikes, aes(x = rides, fill = weekend)) +
  geom_density(alpha = 0.7)
```

Run a Bayesian T Test with the `BayesFactor` package

```{r}
ttestBF(
  formula = rides ~ weekend,  # Numeric variable on left, categorical on right
  data = bikes
)
```

**BF10 = 82395.03** means the data are **82,395 times more likely** under the alternative hypothesis (that there is a difference in the means between the two groups) than under the null hypothesis (that there is no difference).

#### Thresholds for interpreting Bayes Factors:

-   **BF10 \> 100**: Extremely strong evidence for the alternative hypothesis (meaningful difference).

-   **BF10 \> 10**: Strong evidence for the alternative hypothesis.

-   **BF10 \> 3**: Moderate evidence for the alternative hypothesis.

-   **BF10 ≈ 1**: No evidence favoring one hypothesis over the other.

-   **BF10 \< 1/3**: Moderate evidence for the null hypothesis.

-   **BF10 \< 1/10**: Strong evidence for the null hypothesis.

Given that your **BF10 = 82,395**, the result provides **overwhelming evidence** that the number of rides differs between weekend and non-weekend days.

```{r}
bf_result <- ttestBF(formula = rides ~ weekend, data = bikes)

# Draw posterior samples (10000 samples by default)
posterior_samples <- posterior(bf_result, iterations = 10000)

posterior_means <- posterior_samples[, "mu"]  # Overall mean
posterior_difference <- posterior_samples[, "beta (FALSE - TRUE)"]  # Difference in means

# Summary of the posterior difference
summary(posterior_difference)

# Plot the posterior distribution of the difference
hist(posterior_difference, breaks = 50, 
     main = "Posterior Distribution of the Difference in Means",
     xlab = "Difference in Means (Weekday - Weekend)", col = "skyblue")

# Calculate the 95% credible interval
credible_interval <- quantile(posterior_difference, probs = c(0.025, 0.975))
print(credible_interval)
```

### NHANES

```{r}
diet_behavior <- read_xpt(here("data/nhanes_data/DR1TOT_J.XPT"))
blood_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Blood.XPT"))
urine_hg <- read_xpt(here("data/nhanes_data/2017-2018_Hg-Urine.XPT"))
diabetes <- read_xpt(here("data/nhanes_data/2017-2018_Diabetes.XPT"))
demographics <- read_xpt(here("data/nhanes_data/2017-2018_Demographics.XPT"))
```

#### Subset Read-in Datasets

Subset 'diet_behavior' as 'diet'

```{r}
diet <- select(diet_behavior, SEQN, DRD360, DRD370B, DRD370BQ, DRD370Q, DRD370QQ)
```

Subset 'diabetes' as 'tiid'

```{r}
tiid <- select(diabetes, SEQN, DIQ010, DIQ170)
```

Subset 'blood_hg' as 'bhg'

```{r}
bhg <- select(blood_hg, SEQN, LBXIHG, LBDIHGSI, LBXBGE, LBXBGM)
```

Subset "urine_hg' as 'uhg'

```{r}
uhg <- select(urine_hg, SEQN, URXUHG)
```

#### Merge Subsets Into A Working Dataframe as 'df'

```{r}
df <- list(diet, tiid, bhg, uhg)

df <- df %>% reduce(full_join, by = 'SEQN')
```

1.  Filter Dataframe df for the following:

```{r}
# Assuming your dataframe is named `nhanes_data`
df <- df %>%
  # Filter out rows where DIQ010 or DRD360 are NA
  filter(!is.na(DIQ010), !is.na(DRD370B)) %>%
  # Keep only rows where DIQ010 and DRD360 are 1 or 2
  filter(DIQ010 %in% c(1, 2), DRD370B %in% c(1, 2)) %>%
  # Recode 1 to "Yes" and 2 to "No" for DIQ010 and DRD360
  mutate(
    DIQ010 = ifelse(DIQ010 == 1, "Has Diabetes", "No Diabetes"),
    DRD370B = ifelse(DRD370B == 1, "Consumes Ahi", "No Ahi")
  )
  
```

```{r}
df <- df %>% 
  filter(!is.na(LBXBGM))
```

#### Explore the difference between methyl mercury levels, LBXBGM, in a population that consumes ahi vs a population that doesn't consume ahi

-   Find the means of methyl mercurly levels for the two populations

    ```{r}
    df %>% 
      group_by(DRD370B) %>% 
      summarise(mean_mercury_levels = mean(LBXBGM))
    ```

-   Show difference with a boxplot

```{r}
ggplot(data = df, aes(x = DRD370B, y = LBXBGM, fill = DRD370B)) +
  geom_boxplot() +
  ylim(0,5)
```

-   Show difference with a density plot

```{r}
ggplot(data = df, aes(x = LBXBGM, fill = DRD370B)) +
  geom_density(alpha = 0.7) +
  xlim(0,5)
```

-   Run a t-test

```{r}
ttestBF(
  formula = LBXBGM ~ DRD370B,  # Numeric variable on left, categorical on right
  data = df
)
```

### We love penguins

```{r}
data("penguins")
```

```{r}
penguins_sub <- subset(penguins, species %in% c("Chinstrap", "Adelie"))
penguins_sub$species <- droplevels(penguins_sub$species)  # Drop unused levels

# Remove rows with missing values in body_mass_g
penguins_clean <- penguins_sub[!is.na(penguins_sub$body_mass_g), ]
```

```{r}
penguins_clean %>% 
  group_by(species) %>% 
  summarise(mean_body_mass = mean(body_mass_g))
```

```{r}
ggplot(data = penguins_clean, aes(x = species, y = body_mass_g, fill = species)) +
  geom_boxplot() +
  geom_jitter(size = 0.2) +
  theme_bw()
```

```{r}
ttestBF(
  formula = body_mass_g ~ species,
  data = penguins_clean
)
```

### 
